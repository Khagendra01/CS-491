{
  "course": {
    "institution": "Caldwell University",
    "name": "CS 196 - Computer Programming II",
    "url": "https://caldwell.blackboard.com/",
    "instructor": "Dr. V"
  },
  "name": "Assignment 2 - Dunder Methods",
  "instructions": {
    "start": "Assignment instructions will be available under README.md below *after* you initialized the assignment.",
    "work": "<li>Click the README.md below for assignment instructions.</li><li>Click the assignment2.ipynb file to open and edit it.</li><li>Add your code to assignment2.ipynb, run all cells, and save before submitting your assignment.</li>",
    "submit": "Upload the submission file on blackboard (the submission file will have the <b>.submit</b> extension)."
  },
  "due": "2024-02-12",
  "mustBeNew": true,
  "files": [
    {
      "name": "assignment2.ipynb",
      "tracked": true,
      "edited": "-"
    },
    {
      "name": "README.md",
      "content": "Click on the file **assignment2.ipynb** in this assignment.  \nThis is a jupyter notebook where you will add your code.\n\n**DO NOT INCLUDE YOUR NAME ANYWHERE IN THIS FILE OR IN FILENAME**\n\nIn this notebook you should have the following:\n\n1. Create some class that includes the following\n    - `__init__` method\n    - `__str__` method\n    - `__repr__` method\n    - at least 8 more dunder methods that map onto common functions (e.g., len, bool, reverse) and operators (e.g., del, in, +, -, +=, |, &)\n    - at least 2 dunder methods for attribute and/or item access or deletion\n\n2. Create a few objects of this class\n\n3. Show off all implemented functionality\n   \n4. Make sure you have docstrings, comments and/or markdown where appropriate\n\n5. Execute all cells in this notebook, save.\n\n6. Click the **Create Assignment Submission File** button in this assignment, save the submission file (it will have `.submit` as the file extension), and upload this submission file on blackboard.\n\n\n**DO NOT HAVE THE SAME CLASS DEFINITIONS AS YOUR CLASSMATES**:\n\n- Even if you are working together with your peers, make sure that you implement different sets of dunder methods and that they do different things.\n\nCode will be evaluated for:\n1. code is written and works as intended (e.g., correct calls, correct output, no errors)\n2. clean/efficient code (e.g., no unnecessary code)\n3. naming conventions (e.g., class names are UpperCamelCase)\n4. readability (e.g., meaningful names, separation of code into separate cells)\n5. documentation (e.g., docstrings, comments, argument type specification)\n* click \"View Rubric\" on blackboard under this assignment for more details\n\n"
    }
  ],
  "modified": "2024-02-12 14:41",
  "currentlyOpen": true,
  "folder": "c:\\Users\\PSah\\Desktop\\cs 196\\CS 196 - Computer Programming II\\Assignment 2 - Dunder Methods",
  "startDate": "2024-02-12 14:41",
  "submission": {
    "agent": {
      "app": "vscode",
      "extension": "LectureDot.lecture-assign",
      "version": "0.0.16"
    },
    "date": "2024-02-12 14:41",
    "files": [
      {
        "name": "assignment2.ipynb",
        "content": ""
      }
    ],
    "logs": [
      {
        "name": "assignment2.ipynb",
        "log": "{\"t\":1707766882520,\"u\":0,\"v\":\"\",\"_courseId\":\"CS 196 - Computer Programming II\",\"_assignmentId\":\"Assignment 2 - Dunder Methods\"}\n"
      }
    ]
  }
}